import os
import json
import asyncio
import aiohttp
import logging
from datetime import datetime

# Configuration
TELEGRAM_BOT_TOKEN = os.environ.get('TELEGRAM_BOT_TOKEN', '')
TELEGRAM_CHAT_ID = os.environ.get('TELEGRAM_CHAT_ID', '')
STEAM_API_KEY = os.environ.get('STEAM_API_KEY', '')

# Steam account IDs to monitor (just the IDs, no names needed)
STEAM_ACCOUNTS = [
    
   '76561199432726503','76561199528974295','76561199527942381','76561199430042714','76561199527396764','76561199434904088',
'76561199527844086','76561199433770220','76561199528252168','76561199434846406','76561199431510092','76561199444460905',
'76561199527719299','76561199431286132','76561199433473782','76561199433056341','76561199528207164','76561199444883653',
'76561199528037890','76561199528104750','76561199435031882','76561199431267566','76561199528126727','76561199430053630',
'76561199434000454','76561199431758617','76561199434613423','76561199528316816','76561199434619303','76561199527800632',
'76561199433563059','76561199527611344','76561199528324051','76561199432979383','76561199434267626','76561199528886386',
'76561199434000454','76561199527883112','76561199528738484','76561199433216466','76561199444407752','76561199528046657',
'76561199433553388','76561199432695506','76561199433508995','76561199528368811','76561199528738484','76561199430542827',
'76561199528689443','76561199443818915','76561199431668090','76561199528407826','76561199527737182','76561199528179319',
'76561199430281304','76561199432986256','76561199444681000','76561199433553388','76561199527665527','76561199433706551',
'76561199432847032','76561199527142067','76561199528113025','76561199528523007','76561199444592159','76561199433303998',
'76561199527989318','76561199432729789','76561199527946571','76561199444330870','76561199431649506','76561199444068009',
'76561199528767663','76561199527946571','76561199444184678','76561199528477677','76561199527287537','76561199429708232',
'76561199528500358','76561199434729654','76561199528365163','76561199528806801','76561199433979540','76561199433542275',
'76561199528300767','76561199528052127','76561199528497800','76561199433107105','76561199431856377','76561199443887021',
'76561199432981955','76561199528389664','76561199443791871','76561199528075461','76561199528879514','76561199528247910',
'76561199431721475','76561199430048849','76561199433556206','76561199527853688','76561199430183139','76561199528725730',
'76561199528255589','76561199528210792','76561199527112323','76561199429545400','76561199528188514','76561199528046858',
'76561199434085808','76561199527998449','76561199528047369','76561199434364777','76561199528665392','76561199527495560',
'76561199528077087','76561199528523573','76561199529078053','76561199528690266','76561199528133667','76561199430417121',
'76561199528480269','76561199527827460','76561199528234752','76561199528783061','76561199432483045','76561199528021054',
'76561199527912883','76561199434206641','76561199430657188','76561199527925976','76561199430186675','76561199444279719',
'76561199444083622','76561199444117185','76561199430121384','76561199528369967','76561199435568644','76561199431322717',
'76561199527946547','76561199527801410','76561199527435177','76561199527492982','76561199431682451','76561199528537629',
'76561199527447547','76561199429389465','76561199433306606','76561199528821373','76561199528298326','76561199527498933',
'76561199528411947','76561199429803458','76561199528360812','76561199527985587','76561199429900198','76561199527913433',
'76561199433276184','76561199444312548','76561199528086490','76561199527773362','76561199430263989','76561199432988763',
'76561199526895458','76561199435557618','76561199528158100','76561199429501552','76561199435557618','76561199429732113',
'76561199528375666','76561199527789927','76561199527776046','76561199433931676','76561199528472536','76561199528234158',
'76561199418085934','76561199527400907','76561199528048858','76561199528426803','76561199528692083','76561199432909766',
'76561199528417677','76561199527914615','76561199528115460','76561199527722763','76561199431751365','76561199528339129',
'76561199431843618','76561199443879959','76561199527317415','76561199526997288','76561199528312757','76561199528049833',
'76561199528616236','76561199528018567','76561199528437388','76561199430251310','76561199527484048','76561199430038688',
'76561199528872325','76561199433698159','76561199434347493','76561199433443431','76561199432905757','76561199527725452',
'76561199435861768','76561199430511704','76561199527970524','76561199443995511','76561199432600738','76561199432467593',
'76561199430748672','76561199434045837','76561199527977225','76561199432467593','76561199527762085','76561199528278431',
'76561199430748672','76561199527864015','76561199431782538','76561199431676221','76561199433184903','76561199527864015',
'76561199527762085','76561199444346436','76561199527935523','76561199528307125','76561199444346436','76561199432822995',
'76561199527818819','76561199528162762','76561199527690212','76561199527896282','76561199432068256','76561199443991283',
'76561199528577783','76561199528347125','76561199431791247','76561199434669681','76561199433204921','76561199434921309',
'76561199528467800','76561199433282465','76561199528518045','76561199528646261','76561199527555902','76561199528355615',
'76561199528508728','76561199430172762','76561199527462207','76561199527437621','76561199527686167','76561199444569827',
'76561199431845602','76561199528522651','76561199528204560','76561199433993672','76561199432999357','76561199433650785',
'76561199431757414','76561199430283401','76561199527877157','76561199430344480','76561199527626817','76561199177368289',
'76561199527894235','76561199527545686','76561199527649851','76561199526813090','76561199444994119','76561199434778181',
'76561199527628668','76561199431933316','76561199431834689','76561199528411380','76561199527425663','76561199445152479',
'76561199528040393','76561199528507192','76561199527086173','76561199528869035','76561199528311007','76561199527946913',
'76561199528204487','76561199429695331','76561199528180508','76561199434442930','76561199444450099','76561199528303504',
'76561199527524394','76561199527708113','76561199433179305','76561199528531736','76561199527549294','76561199432551166',
'76561199429620732','76561199528207914','76561199444281874','76561199430198833','76561199433321362','76561199528277398',
'76561199526724636','76561199430465118','76561199528207914','76561199528306562','76561199416998144','76561199430545208',
'76561199528268873','76561199527826492','76561199527701859','76561199444623086','76561199528422946','76561199528096046',
'76561199528076632','76561199432204218','76561199433782304','76561199417110304','76561199433350488','76561199429647266',
'76561199528061528','76561199429258114','76561199527974028','76561199430716229','76561199527848581','76561199526813090',
'76561199433198447','76561199527999230','76561199527796362','76561199434151704','76561199431480816','76561199430069462',
'76561199435769955','76561199529112300','76561199433966110','76561199433246810','76561199527613536','76561199528177745',
'76561199433842907','76561199528568808','76561199528075197','76561199433512063','76561199527874799','76561199430341294',
'76561199528331486','76561199433947434','76561199528538022','76561199528224480','76561199528625873','76561199430731896',
'76561199431571293','76561199432040080','76561199430743709','76561199527754683','76561199434754276','76561199527163751',
'76561199527395637','76561199431269588','76561199528779571','76561199528111286','76561199444507827','76561199433382193',
'76561199527689261','76561199435134390','76561199527624909','76561199431597874','76561199527163751','76561199434754276',
'76561199527077811','76561199431727343','76561199527896282','76561199432068256','76561199443991283','76561199528347125',
'76561199432822995','76561199527818819','76561199528162762','76561199528307125','76561199527690212','76561199528531259',
'76561199528577783','76561199430886315','76561199528051151','76561199527540861','76561199429563969','76561199432418379',
'76561199444000312','76561199528293646','76561199444286286','76561199433485649','76561199433708679','76561199527694485',
'76561199430329745','76561199527694485','76561199429900707','76561199433856753','76561199527756225','76561199433333556',
'76561199429632005','76561199527933207','76561199444921438','76561199528408015','76561199431656828','76561199527976408',
'76561199528411088','76561199527873293','76561199430375095','76561199431229378','76561199433201212','76561199528350908',
'76561199430403803','76561199430788909','76561199429781956','76561199430177766','76561199527516589','76561199527344496',
'76561199527699266','76561199431799117','76561199433454546','76561199528263779','76561199527751573','76561199528158887',
'76561199527968374','76561199528158887','76561199527937970','76561199430794435','76561199527717505','76561199430762956',
'76561199528399902','76561199434317562','76561199528581023','76561199528307681','76561199528307681','76561199433444899',
'76561199431743027','76561199434684790','76561199418094030','76561199528539174','76561199528261600','76561199434192599',
'76561199435211856','76561199528583383','76561199430032096','76561199430199154','76561199429953191','76561199528392983',
'76561199528103475','76561199434560309','76561199444661693','76561199431525819','76561199430193052','76561199527261885',
'76561199527248937','76561199528604900','76561199528055116','76561199527617061','76561199431008831','76561199432214715',
'76561199430583281','76561199527358101','76561199429975652','76561199430583281','76561199429920678','76561199529014615',
'76561199527965808','76561199528115315','76561199431734378','76561199433376463','76561199527943466','76561199444293980',
'76561199444829303','76561199429992653','76561199433435752','76561199527758000','76561199431619583','76561199429730292',
'76561199527867452','76561199433188924','76561199527924180','76561199528343774','76561199431944697','76561199429994173',
'76561199434516177','76561199431526094','76561199444080079','76561199527999951','76561199527286622','76561199431526094',
'76561199444080079','76561199528343774','76561199433353034','76561199528025977','76561199527553947','76561199528208096',
'76561199429489553','76561199429393772','76561199527984612','76561199527252978','76561199432649400','76561199529183464',
'76561199527969292','76561199433138647','76561199430729887','76561199528149930','76561199527532293','76561199433213354',
'76561199527867551','76561199434632289','76561199433188878','76561199528495168','76561199444195546','76561199430344706',
'76561199431472484','76561199527874923','76561199528334425','76561199433322865','76561199526947290','76561199528685914',
'76561199528655743','76561199527482613','76561199433861518','76561199527822153','76561199527822153','76561199528170014',
'76561199528183229','76561199430028894','76561199527957403','76561199528257397','76561199528315869','76561199528472338',
'76561199528276583','76561199528671094','76561199432184778','76561199527290548','76561199528594564','76561199527857305',
'76561199527418433','76561199431746574','76561199528745753','76561199527602408','76561199433621890','76561199434822939',
'76561199443587037','76561199431732111','76561199528533603','76561199527805018','76561199432940903','76561199528332579',
'76561199432573525','76561199528162994','76561199434581731','76561199430442714','76561199527793401','76561199431704891',
'76561199527395047','76561199527460963','76561199431923638','76561199433162266','76561199434387657','76561199527759932',
'76561199528351906','76561199527944012','76561199527795038','76561199431976085','76561199528786518','76561199528130752',
'76561199433944908','76561199527629170','76561199444746963','76561199433154356','76561199431752669','76561199444655623',
'76561199528324207','76561199432820199','76561199528039016','76561199529089344','76561199433371056','76561199528068566',
'76561199528080312','76561199528171258','76561199429716178','76561199527353152','76561199527986706','76561199527727619',
'76561199432068787','76561199527448435','76561199528838804','76561199527562446','76561199431977046','76561199527982723',
'76561199528333562','76561199431779856','76561199432243867','76561199527010604','76561199527549037','76561199433833778',
'76561199528053965','76561199528976457','76561199528030857','76561199527423899','76561199528079939','76561199417416839',
'76561199528363740','76561199431493441','76561199527723812','76561199434664770','76561199434730043','76561199527215273',
'76561199444226499','76561199430171469','76561199445226787','76561199528238108','76561199434165689','76561199444104176',
'76561199527621221','76561199528409133','76561199432066925','76561199528173084','76561199527926257','76561199527643213',
'76561199528630103','76561199430161866','76561199434433823','76561199431379741','76561199430481920','76561199444359916',
'76561199430454666','76561199434986304','76561199434369030','76561199429640026','76561199527781262','76561199528230635',
'76561199443951459','76561199527699839','76561199528032016','76561199443999223','76561199444596125','76561199431273453',
'76561199527718436','76561199527607324','76561199430399361','76561199527572011','76561199434716431','76561199529068216',
'76561199528936697','76561199527202295','76561199527645750','76561199528594959','76561199430365136','76561199434716431',
'76561199444372533','76561199431679243','76561199527744110','76561199527835358','76561199527940459','76561199429597800',
'76561199434785367','76561199528077076','76561199527807772','76561199527848280','76561199527437940','76561199430251729',
'76561199432982393','76561199528003780','76561199527387705','76561199527387866','76561199527484337','76561199528193837',
'76561199527801051','76561199526926255','76561199430047459','76561199527344073','76561199527935038','76561199434772809',
'76561199526926255','76561199433327889','76561199528638551','76561199430371125','76561199431606363','76561199432857376',
'76561199528415653','76561199528276447','76561199527856095','76561199431667159','76561199431961551','76561199433278874',
'76561199528294935','76561199430012103','76561199430948911','76561199429794670','76561199527985364','76561199528592038',
'76561199527424311','76561199445973837','76561199433422646','76561199528497957','76561199445973837','76561199430012103',
'76561199528304993','76561199432083398','76561199528869378','76561199430129758','76561199431677723','76561199431445170',
'76561199527649880','76561199528738237','76561199431407180','76561199528556286','76561199528262861','76561199528070398',
'76561199434811813','76561199527893227','76561199527996729','76561199434012206','76561199443977378','76561199433496616',
'76561199527493172','76561199527837800','76561199528371112','76561199434738747','76561199528126430','76561199527976700',
'76561199431791144','76561199432439320','76561199528116362','76561199527878040','76561199526887786','76561199433096923',
'76561199434901750','76561199527649984','76561199445019049','76561199528085000','76561199527388926','76561199527775979',
'76561199434403920','76561199429635806','76561199528238740','76561199431409854','76561199528446922','76561199429320186',
'76561199528288540','76561199527353795','76561199528406058','76561199528819105','76561199433878832','76561199435089779',
'76561199431624687','76561199527509706','76561199528343932','76561199527779151','76561199528262598','76561199528050226',
'76561199527895847','76561199528115530','76561199527914584','76561199438548594','76561199430176978','76561199434097784',
'76561199431347108','76561199434963282','76561199528863170','76561199444256400','76561199433107428','76561199528883942',
'76561199434939605','76561199527837897','76561199431753961','76561199444421263','76561199444677337','76561199434223316',
'76561199528213360','76561199429488161','76561199443733680','76561199431885101','76561199429723304','76561199528103773',
'76561199432593334','76561199527905660','76561199528475458','76561199434299993','76561199430154261','76561199431324984',
'76561199528366074','76561199528330519','76561199527942797','76561199527546379','76561199527991098','76561199430221673',
'76561199430409931','76561199429592784','76561199434532544','76561199433127074','76561199528679454','76561199432768609',
'76561199434484163','76561199444949407','76561199434707055','76561199433423166',

    
    
]
    
    
DATA_FILE = 'friend_data.json'
INIT_FILE = '.initialized'

logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger("SteamFriendIDMonitor")

def get_profile_link(steam_id):
    """Generate Steam profile link from Steam ID"""
    return f"steamcommunity.com/profiles/{steam_id}"

async def fetch_friend_list(session, steam_id):
    """Fetch the complete friend list for a Steam account"""
    url = f"http://api.steampowered.com/ISteamUser/GetFriendList/v0001/?key={STEAM_API_KEY}&steamid={steam_id}&relationship=friend"
    profile_link = get_profile_link(steam_id)
    
    try:
        async with session.get(url, timeout=10) as resp:
            if resp.status == 200:
                data = await resp.json()
                friends_data = data.get('friendslist', {}).get('friends', [])
                # Extract just the Steam IDs of friends
                friend_ids = [friend['steamid'] for friend in friends_data]
                return steam_id, profile_link, friend_ids
            elif resp.status == 403:
                logger.warning(f"{profile_link} is private")
                return steam_id, profile_link, None
            else:
                logger.error(f"{profile_link}: API error {resp.status}")
                return steam_id, profile_link, None
    except Exception as e:
        logger.error(f"Error fetching {profile_link}: {e}")
        return steam_id, profile_link, None

async def send_telegram_message(message):
    """Send message to Telegram, splitting if too long"""
    MAX_MESSAGE_LENGTH = 4000  # Leave some buffer under 4096 limit
    
    if len(message) <= MAX_MESSAGE_LENGTH:
        await _send_single_message(message)
    else:
        # Split message into chunks
        lines = message.split('\n')
        current_chunk = ""
        
        for line in lines:
            # If adding this line would exceed limit, send current chunk
            if len(current_chunk + line + '\n') > MAX_MESSAGE_LENGTH:
                if current_chunk:
                    await _send_single_message(current_chunk.strip())
                    current_chunk = line + '\n'
                else:
                    # Single line is too long, truncate it
                    await _send_single_message(line[:MAX_MESSAGE_LENGTH])
            else:
                current_chunk += line + '\n'
        
        # Send remaining chunk
        if current_chunk:
            await _send_single_message(current_chunk.strip())

async def _send_single_message(message):
    """Send a single message to Telegram"""
    url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"
    payload = {
        'chat_id': TELEGRAM_CHAT_ID,
        'text': message,
        'parse_mode': 'HTML'
    }
    async with aiohttp.ClientSession() as session:
        try:
            async with session.post(url, data=payload) as resp:
                if resp.status != 200:
                    logger.error(f"Failed to send message: {await resp.text()}")
                else:
                    logger.info("Telegram message sent successfully")
        except Exception as e:
            logger.error(f"Telegram error: {e}")

def load_previous_data():
    """Load previous friend data from file"""
    try:
        with open(DATA_FILE, 'r') as f:
            return json.load(f)
    except:
        return {}

def save_data(data):
    """Save friend data to file"""
    with open(DATA_FILE, 'w') as f:
        json.dump(data, f, indent=2)

def is_first_run():
    """Check if this is the first run of the bot"""
    if os.path.exists(INIT_FILE):
        return False
    with open(INIT_FILE, 'w') as f:
        f.write(datetime.now().isoformat())
    return True

async def check_accounts():
    """Main function to check all accounts for friend changes"""
    first_run = is_first_run()
    previous_data = load_previous_data()
    current_data = {}
    all_new_friends = []  # Collect all new friends for batched notification
    
    async with aiohttp.ClientSession() as session:
        tasks = [fetch_friend_list(session, steam_id) for steam_id in STEAM_ACCOUNTS]
        results = await asyncio.gather(*tasks)

    for steam_id, profile_link, friend_ids in results:
        if friend_ids is None:
            continue
            
        current_data[steam_id] = {
            'profile_link': profile_link,
            'friends': friend_ids,
            'count': len(friend_ids)
        }
        
        # Skip change detection on first run
        if first_run or steam_id not in previous_data:
            continue
            
        previous_friends = set(previous_data[steam_id].get('friends', []))
        current_friends = set(friend_ids)
        
        # Check for new friends only
        new_friends = current_friends - previous_friends
        if new_friends:
            for friend_id in new_friends:
                friend_profile_link = get_profile_link(friend_id)
                all_new_friends.append(friend_profile_link)
                logger.info(f"New friend detected: {friend_id} added to {steam_id}")
        
        # Log removed friends (no telegram notification)
        removed_friends = previous_friends - current_friends
        if removed_friends:
            for friend_id in removed_friends:
                logger.info(f"Friend removed: {friend_id} removed from {steam_id}")

    # Send batched notification for all new friends
    logger.info(f"Total new friends collected: {len(all_new_friends)}")
    logger.info(f"First run status: {first_run}")
    
    if all_new_friends and not first_run:
        if len(all_new_friends) == 1:
            msg = f"New friend: {all_new_friends[0]}"
        else:
            msg = f"New friends detected ({len(all_new_friends)}):\n\n"
            msg += "\n".join([f"• {friend_link}" for friend_link in all_new_friends])
        
        logger.info(f"Attempting to send Telegram message: {msg[:100]}...")
        await send_telegram_message(msg)
        logger.info(f"Sent batched notification for {len(all_new_friends)} new friends")
    elif all_new_friends and first_run:
        logger.info(f"New friends detected on first run (not sending notification): {len(all_new_friends)}")
    else:
        logger.info("No new friends detected in this cycle")

    # Save current data
    save_data(current_data)

    if first_run:
        # Log initial setup (no telegram messages)
        total_accounts = len(current_data)
        private_accounts = len(STEAM_ACCOUNTS) - total_accounts
        total_friends = sum(data['count'] for data in current_data.values())
        
        logger.info(f"Steam Friend ID Monitor Setup Complete")
        logger.info(f"Monitoring {total_accounts} accounts")
        logger.info(f"Total friends being tracked: {total_friends}")
        if private_accounts > 0:
            logger.info(f"{private_accounts} accounts are private")
        logger.info("Bot will now notify when specific friends are added with their Steam IDs")
    else:
        logger.info("Friend check completed")

if __name__ == '__main__':
    asyncio.run(check_accounts())
